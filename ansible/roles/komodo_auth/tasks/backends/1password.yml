---
# 1Password Secret Backend Implementation
# Maintains backward compatibility with existing deployments using 1Password
#
# Operations:
#   - check: Verify if credentials exist
#   - store: Save credentials to 1Password vault

- name: "[1Password] Check if API keys already exist"
  ansible.builtin.shell: >
    op item get "{{ komodo_auth_1password_item }}"
    --vault "{{ komodo_auth_1password_vault }}"
    --fields komodo_api_key 2>/dev/null || echo ""
  register: komodo_auth_existing_api_key
  failed_when: false
  changed_when: false
  no_log: true
  when: operation == 'check'

- name: "[1Password] Update API key in vault"
  ansible.builtin.shell: >
    op item edit "{{ komodo_auth_1password_item }}"
    --vault "{{ komodo_auth_1password_vault }}"
    "komodo_api_key={{ komodo_auth_api_key }}" < /dev/null
  no_log: true
  changed_when: true
  when: operation == 'store'

- name: "[1Password] Update API secret in vault"
  ansible.builtin.shell: >
    op item edit "{{ komodo_auth_1password_item }}"
    --vault "{{ komodo_auth_1password_vault }}"
    "komodo_api_secret={{ komodo_auth_api_secret }}" < /dev/null
  no_log: true
  changed_when: true
  when: operation == 'store'

- name: "[1Password] Verify API keys were stored"
  ansible.builtin.command: >
    op item get "{{ komodo_auth_1password_item }}"
    --vault "{{ komodo_auth_1password_vault }}"
    --fields komodo_api_key
  register: komodo_auth_verify_api_key
  changed_when: false
  no_log: true
  when: operation == 'store'
